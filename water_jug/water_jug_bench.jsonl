{"diff_sorted_id": "1", "problem_statement": "Given 5 labeled water jugs with capacities 41, 26, 44, 75, 40, 136 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 274, 297, 343 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 40, 3], [\"+\", 75, 3], [\"+\", 136, 3], [\"-\", 44, 3], [\"+\", 136, 3], [\"+\", 26, 2], [\"+\", 40, 2], [\"+\", 136, 2], [\"-\", 41, 2], [\"+\", 136, 2], [\"+\", 40, 1], [\"+\", 40, 1], [\"+\", 44, 1], [\"+\", 75, 1], [\"+\", 75, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.05471658706665039", "solution_depth": "15", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[41, 26, 44, 75, 40, 136], [274, 297, 343]]", "is_correct_args": "[[41, 26, 44, 75, 40, 136], [274, 297, 343]]", "A*_args": "[\"[41, 26, 44, 75, 40, 136]\", \"[274, 297, 343]\"]"}
{"diff_sorted_id": "2", "problem_statement": "Given 5 labeled water jugs with capacities 31, 102, 53, 33, 32, 24 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 188, 198, 289 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 32, 3], [\"+\", 102, 3], [\"+\", 102, 3], [\"+\", 53, 3], [\"+\", 31, 2], [\"+\", 32, 2], [\"+\", 33, 2], [\"+\", 102, 2], [\"+\", 33, 1], [\"+\", 53, 1], [\"+\", 102, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.04619026184082031", "solution_depth": "11", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[31, 102, 53, 33, 32, 24], [188, 198, 289]]", "is_correct_args": "[[31, 102, 53, 33, 32, 24], [188, 198, 289]]", "A*_args": "[\"[31, 102, 53, 33, 32, 24]\", \"[188, 198, 289]\"]"}
{"diff_sorted_id": "3", "problem_statement": "Given 5 labeled water jugs with capacities 43, 149, 131, 132, 70, 104 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 284, 297, 436 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 131, 3], [\"+\", 131, 3], [\"+\", 70, 3], [\"+\", 104, 3], [\"+\", 131, 2], [\"+\", 132, 2], [\"-\", 70, 2], [\"+\", 104, 2], [\"+\", 104, 1], [\"+\", 104, 1], [\"-\", 132, 1], [\"+\", 104, 1], [\"+\", 104, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.038121938705444336", "solution_depth": "13", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[43, 149, 131, 132, 70, 104], [284, 297, 436]]", "is_correct_args": "[[43, 149, 131, 132, 70, 104], [284, 297, 436]]", "A*_args": "[\"[43, 149, 131, 132, 70, 104]\", \"[284, 297, 436]\"]"}
{"diff_sorted_id": "4", "problem_statement": "Given 5 labeled water jugs with capacities 36, 88, 132, 70, 87, 111 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 225, 237, 243 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 111, 3], [\"+\", 132, 3], [\"+\", 87, 2], [\"+\", 132, 2], [\"-\", 70, 2], [\"+\", 88, 2], [\"+\", 70, 1], [\"+\", 132, 1], [\"-\", 88, 1], [\"+\", 111, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.033365726470947266", "solution_depth": "10", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[36, 88, 132, 70, 87, 111], [225, 237, 243]]", "is_correct_args": "[[36, 88, 132, 70, 87, 111], [225, 237, 243]]", "A*_args": "[\"[36, 88, 132, 70, 87, 111]\", \"[225, 237, 243]\"]"}
{"diff_sorted_id": "5", "problem_statement": "Given 5 labeled water jugs with capacities 145, 101, 17, 75, 102, 129 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 260, 287, 413 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 17, 3], [\"+\", 101, 3], [\"+\", 145, 3], [\"+\", 75, 3], [\"+\", 75, 3], [\"+\", 101, 2], [\"+\", 101, 2], [\"-\", 17, 2], [\"+\", 102, 2], [\"+\", 101, 1], [\"-\", 17, 1], [\"+\", 75, 1], [\"+\", 101, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.04054903984069824", "solution_depth": "13", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[145, 101, 17, 75, 102, 129], [260, 287, 413]]", "is_correct_args": "[[145, 101, 17, 75, 102, 129], [260, 287, 413]]", "A*_args": "[\"[145, 101, 17, 75, 102, 129]\", \"[260, 287, 413]\"]"}
{"diff_sorted_id": "6", "problem_statement": "Given 5 labeled water jugs with capacities 76, 135, 134, 19, 10, 30 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 390, 420, 439 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 76, 3], [\"+\", 76, 3], [\"+\", 134, 3], [\"+\", 19, 3], [\"+\", 134, 3], [\"+\", 134, 2], [\"+\", 134, 2], [\"+\", 76, 2], [\"+\", 76, 2], [\"+\", 76, 1], [\"+\", 76, 1], [\"+\", 134, 1], [\"-\", 30, 1], [\"+\", 134, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.05055570602416992", "solution_depth": "14", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[76, 135, 134, 19, 10, 30], [390, 420, 439]]", "is_correct_args": "[[76, 135, 134, 19, 10, 30], [390, 420, 439]]", "A*_args": "[\"[76, 135, 134, 19, 10, 30]\", \"[390, 420, 439]\"]"}
{"diff_sorted_id": "7", "problem_statement": "Given 5 labeled water jugs with capacities 22, 48, 29, 111, 92, 28 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 164, 233, 289 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 48, 3], [\"+\", 111, 3], [\"+\", 111, 3], [\"-\", 29, 3], [\"+\", 48, 3], [\"+\", 29, 2], [\"+\", 92, 2], [\"+\", 92, 2], [\"-\", 28, 2], [\"+\", 48, 2], [\"+\", 22, 1], [\"+\", 22, 1], [\"+\", 28, 1], [\"+\", 92, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.03762245178222656", "solution_depth": "14", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[22, 48, 29, 111, 92, 28], [164, 233, 289]]", "is_correct_args": "[[22, 48, 29, 111, 92, 28], [164, 233, 289]]", "A*_args": "[\"[22, 48, 29, 111, 92, 28]\", \"[164, 233, 289]\"]"}
{"diff_sorted_id": "8", "problem_statement": "Given 5 labeled water jugs with capacities 59, 68, 104, 106, 69, 42 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 196, 210, 238 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 106, 3], [\"+\", 106, 3], [\"-\", 42, 3], [\"+\", 68, 3], [\"+\", 104, 2], [\"+\", 106, 2], [\"+\", 59, 1], [\"+\", 68, 1], [\"+\", 69, 1]]", "opt_solution_cost": "9", "opt_solution_compute_t": "0.032889366149902344", "solution_depth": "9", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[59, 68, 104, 106, 69, 42], [196, 210, 238]]", "is_correct_args": "[[59, 68, 104, 106, 69, 42], [196, 210, 238]]", "A*_args": "[\"[59, 68, 104, 106, 69, 42]\", \"[196, 210, 238]\"]"}
{"diff_sorted_id": "9", "problem_statement": "Given 5 labeled water jugs with capacities 129, 57, 45, 105, 128, 78 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 344, 376, 386 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 128, 3], [\"+\", 129, 3], [\"+\", 129, 3], [\"+\", 105, 2], [\"+\", 105, 2], [\"+\", 128, 2], [\"-\", 45, 2], [\"-\", 45, 2], [\"+\", 128, 2], [\"+\", 78, 1], [\"+\", 105, 1], [\"+\", 128, 1], [\"-\", 45, 1], [\"+\", 78, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.05803990364074707", "solution_depth": "14", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[129, 57, 45, 105, 128, 78], [344, 376, 386]]", "is_correct_args": "[[129, 57, 45, 105, 128, 78], [344, 376, 386]]", "A*_args": "[\"[129, 57, 45, 105, 128, 78]\", \"[344, 376, 386]\"]"}
{"diff_sorted_id": "10", "problem_statement": "Given 5 labeled water jugs with capacities 14, 119, 62, 18, 133, 13 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 218, 272, 314 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 119, 3], [\"+\", 119, 3], [\"+\", 62, 3], [\"+\", 14, 3], [\"+\", 133, 2], [\"+\", 133, 2], [\"-\", 13, 2], [\"+\", 14, 2], [\"-\", 13, 2], [\"+\", 18, 2], [\"+\", 14, 1], [\"+\", 133, 1], [\"-\", 62, 1], [\"+\", 133, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.029827594757080078", "solution_depth": "14", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[14, 119, 62, 18, 133, 13], [218, 272, 314]]", "is_correct_args": "[[14, 119, 62, 18, 133, 13], [218, 272, 314]]", "A*_args": "[\"[14, 119, 62, 18, 133, 13]\", \"[218, 272, 314]\"]"}
{"diff_sorted_id": "11", "problem_statement": "Given 5 labeled water jugs with capacities 140, 58, 129, 130, 125 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 391, 401, 431 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 140, 3], [\"+\", 140, 3], [\"+\", 140, 3], [\"-\", 129, 3], [\"+\", 140, 3], [\"+\", 125, 2], [\"+\", 125, 2], [\"+\", 140, 2], [\"-\", 129, 2], [\"+\", 140, 2], [\"+\", 125, 1], [\"+\", 125, 1], [\"+\", 130, 1], [\"-\", 129, 1], [\"+\", 140, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.04181361198425293", "solution_depth": "15", "max_successor_states": "30", "num_vars_per_state": "3", "is_feasible_args": "[[140, 58, 129, 130, 125], [391, 401, 431]]", "is_correct_args": "[[140, 58, 129, 130, 125], [391, 401, 431]]", "A*_args": "[\"[140, 58, 129, 130, 125]\", \"[391, 401, 431]\"]"}
{"diff_sorted_id": "12", "problem_statement": "Given 5 labeled water jugs with capacities 46, 99, 145, 131, 78, 100 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 247, 340, 368 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 78, 3], [\"+\", 145, 3], [\"+\", 145, 3], [\"+\", 78, 2], [\"+\", 131, 2], [\"+\", 131, 2], [\"+\", 131, 1], [\"-\", 46, 1], [\"+\", 131, 1], [\"-\", 100, 1], [\"+\", 131, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.027457475662231445", "solution_depth": "11", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[46, 99, 145, 131, 78, 100], [247, 340, 368]]", "is_correct_args": "[[46, 99, 145, 131, 78, 100], [247, 340, 368]]", "A*_args": "[\"[46, 99, 145, 131, 78, 100]\", \"[247, 340, 368]\"]"}
{"diff_sorted_id": "13", "problem_statement": "Given 5 labeled water jugs with capacities 57, 84, 47, 76, 85, 69 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 203, 217, 334 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 47, 3], [\"+\", 76, 3], [\"+\", 85, 3], [\"+\", 57, 3], [\"+\", 69, 3], [\"+\", 85, 2], [\"+\", 85, 2], [\"+\", 47, 2], [\"+\", 47, 1], [\"+\", 57, 1], [\"+\", 84, 1], [\"-\", 69, 1], [\"+\", 84, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.028015613555908203", "solution_depth": "13", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[57, 84, 47, 76, 85, 69], [203, 217, 334]]", "is_correct_args": "[[57, 84, 47, 76, 85, 69], [203, 217, 334]]", "A*_args": "[\"[57, 84, 47, 76, 85, 69]\", \"[203, 217, 334]\"]"}
{"diff_sorted_id": "14", "problem_statement": "Given 5 labeled water jugs with capacities 144, 37, 73, 79, 75, 74 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 236, 333, 386 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 74, 3], [\"+\", 75, 3], [\"+\", 79, 3], [\"+\", 79, 3], [\"+\", 79, 3], [\"+\", 73, 2], [\"+\", 79, 2], [\"+\", 144, 2], [\"+\", 37, 2], [\"+\", 73, 1], [\"+\", 79, 1], [\"+\", 79, 1], [\"-\", 74, 1], [\"+\", 79, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.03917884826660156", "solution_depth": "14", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[144, 37, 73, 79, 75, 74], [236, 333, 386]]", "is_correct_args": "[[144, 37, 73, 79, 75, 74], [236, 333, 386]]", "A*_args": "[\"[144, 37, 73, 79, 75, 74]\", \"[236, 333, 386]\"]"}
{"diff_sorted_id": "15", "problem_statement": "Given 5 labeled water jugs with capacities 19, 50, 12, 63, 143, 13 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 160, 170, 330 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 63, 3], [\"+\", 143, 3], [\"-\", 19, 3], [\"+\", 143, 3], [\"+\", 63, 2], [\"+\", 63, 2], [\"-\", 19, 2], [\"+\", 63, 2], [\"+\", 143, 1], [\"-\", 63, 1], [\"-\", 63, 1], [\"+\", 143, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.03795623779296875", "solution_depth": "12", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[19, 50, 12, 63, 143, 13], [160, 170, 330]]", "is_correct_args": "[[19, 50, 12, 63, 143, 13], [160, 170, 330]]", "A*_args": "[\"[19, 50, 12, 63, 143, 13]\", \"[160, 170, 330]\"]"}
{"diff_sorted_id": "16", "problem_statement": "Given 5 labeled water jugs with capacities 102, 130, 82, 131, 133, 116 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 265, 368, 378 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 116, 3], [\"+\", 131, 3], [\"+\", 131, 3], [\"+\", 102, 2], [\"+\", 133, 2], [\"+\", 133, 2], [\"+\", 130, 1], [\"+\", 133, 1], [\"-\", 131, 1], [\"+\", 133, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.033504486083984375", "solution_depth": "10", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[102, 130, 82, 131, 133, 116], [265, 368, 378]]", "is_correct_args": "[[102, 130, 82, 131, 133, 116], [265, 368, 378]]", "A*_args": "[\"[102, 130, 82, 131, 133, 116]\", \"[265, 368, 378]\"]"}
{"diff_sorted_id": "17", "problem_statement": "Given 5 labeled water jugs with capacities 143, 117, 116, 103, 84, 87 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 398, 440, 440 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 103, 3], [\"+\", 117, 3], [\"+\", 117, 3], [\"+\", 103, 3], [\"+\", 103, 2], [\"+\", 117, 2], [\"+\", 117, 2], [\"+\", 103, 2], [\"+\", 84, 1], [\"+\", 87, 1], [\"+\", 143, 1], [\"+\", 84, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.03967571258544922", "solution_depth": "12", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[143, 117, 116, 103, 84, 87], [398, 440, 440]]", "is_correct_args": "[[143, 117, 116, 103, 84, 87], [398, 440, 440]]", "A*_args": "[\"[143, 117, 116, 103, 84, 87]\", \"[398, 440, 440]\"]"}
{"diff_sorted_id": "18", "problem_statement": "Given 5 labeled water jugs with capacities 71, 124, 95, 42, 56, 41 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 291, 292, 326 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "4", "opt_solution": "[[\"+\", 95, 3], [\"+\", 95, 3], [\"+\", 95, 3], [\"+\", 41, 3], [\"+\", 56, 2], [\"+\", 71, 2], [\"+\", 124, 2], [\"+\", 41, 2], [\"+\", 42, 1], [\"+\", 95, 1], [\"+\", 124, 1], [\"-\", 41, 1], [\"+\", 71, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.03421187400817871", "solution_depth": "13", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[71, 124, 95, 42, 56, 41], [291, 292, 326]]", "is_correct_args": "[[71, 124, 95, 42, 56, 41], [291, 292, 326]]", "A*_args": "[\"[71, 124, 95, 42, 56, 41]\", \"[291, 292, 326]\"]"}
{"diff_sorted_id": "19", "problem_statement": "Given 7 labeled water jugs with capacities 21, 62, 98, 143, 61, 110, 140, 40 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 280, 338, 353 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 110, 3], [\"+\", 140, 3], [\"-\", 40, 3], [\"+\", 143, 3], [\"+\", 140, 2], [\"+\", 140, 2], [\"-\", 40, 2], [\"+\", 98, 2], [\"+\", 140, 1], [\"+\", 140, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.0442960262298584", "solution_depth": "10", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[21, 62, 98, 143, 61, 110, 140, 40], [280, 338, 353]]", "is_correct_args": "[[21, 62, 98, 143, 61, 110, 140, 40], [280, 338, 353]]", "A*_args": "[\"[21, 62, 98, 143, 61, 110, 140, 40]\", \"[280, 338, 353]\"]"}
{"diff_sorted_id": "20", "problem_statement": "Given 7 labeled water jugs with capacities 76, 48, 35, 94, 93, 115, 16, 53 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 247, 261, 273 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 48, 3], [\"+\", 94, 3], [\"+\", 16, 3], [\"+\", 115, 3], [\"+\", 93, 2], [\"+\", 115, 2], [\"+\", 53, 2], [\"+\", 76, 1], [\"+\", 93, 1], [\"-\", 16, 1], [\"+\", 94, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.03790163993835449", "solution_depth": "11", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[76, 48, 35, 94, 93, 115, 16, 53], [247, 261, 273]]", "is_correct_args": "[[76, 48, 35, 94, 93, 115, 16, 53], [247, 261, 273]]", "A*_args": "[\"[76, 48, 35, 94, 93, 115, 16, 53]\", \"[247, 261, 273]\"]"}
{"diff_sorted_id": "21", "problem_statement": "Given 7 labeled water jugs with capacities 52, 131, 82, 132, 117, 65 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 357, 384, 522 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 117, 3], [\"+\", 117, 3], [\"+\", 52, 3], [\"+\", 52, 3], [\"+\", 52, 3], [\"+\", 132, 3], [\"+\", 82, 2], [\"+\", 131, 2], [\"+\", 52, 2], [\"+\", 52, 2], [\"-\", 65, 2], [\"+\", 132, 2], [\"+\", 65, 1], [\"+\", 131, 1], [\"+\", 131, 1], [\"-\", 52, 1], [\"+\", 82, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.047934532165527344", "solution_depth": "17", "max_successor_states": "36", "num_vars_per_state": "3", "is_feasible_args": "[[52, 131, 82, 132, 117, 65], [357, 384, 522]]", "is_correct_args": "[[52, 131, 82, 132, 117, 65], [357, 384, 522]]", "A*_args": "[\"[52, 131, 82, 132, 117, 65]\", \"[357, 384, 522]\"]"}
{"diff_sorted_id": "22", "problem_statement": "Given 7 labeled water jugs with capacities 16, 124, 57, 40, 99, 45, 72, 98 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 263, 341, 360 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 98, 3], [\"+\", 124, 3], [\"+\", 40, 3], [\"+\", 98, 3], [\"+\", 45, 2], [\"+\", 98, 2], [\"+\", 99, 2], [\"+\", 99, 2], [\"+\", 40, 1], [\"+\", 99, 1], [\"+\", 124, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.04340982437133789", "solution_depth": "11", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[16, 124, 57, 40, 99, 45, 72, 98], [263, 341, 360]]", "is_correct_args": "[[16, 124, 57, 40, 99, 45, 72, 98], [263, 341, 360]]", "A*_args": "[\"[16, 124, 57, 40, 99, 45, 72, 98]\", \"[263, 341, 360]\"]"}
{"diff_sorted_id": "23", "problem_statement": "Given 7 labeled water jugs with capacities 118, 15, 88, 145, 84, 14, 107, 31 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 226, 258, 296 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 31, 3], [\"+\", 118, 3], [\"+\", 15, 3], [\"+\", 118, 3], [\"+\", 14, 3], [\"+\", 15, 2], [\"+\", 84, 2], [\"+\", 145, 2], [\"+\", 14, 2], [\"+\", 88, 1], [\"+\", 107, 1], [\"+\", 31, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.05219745635986328", "solution_depth": "12", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[118, 15, 88, 145, 84, 14, 107, 31], [226, 258, 296]]", "is_correct_args": "[[118, 15, 88, 145, 84, 14, 107, 31], [226, 258, 296]]", "A*_args": "[\"[118, 15, 88, 145, 84, 14, 107, 31]\", \"[226, 258, 296]\"]"}
{"diff_sorted_id": "24", "problem_statement": "Given 7 labeled water jugs with capacities 33, 56, 108, 53, 65, 54, 52, 59 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 168, 239, 307 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 59, 3], [\"+\", 108, 3], [\"+\", 108, 3], [\"-\", 33, 3], [\"+\", 65, 3], [\"+\", 108, 2], [\"+\", 108, 2], [\"-\", 33, 2], [\"+\", 56, 2], [\"+\", 53, 1], [\"+\", 56, 1], [\"+\", 59, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.04154396057128906", "solution_depth": "12", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[33, 56, 108, 53, 65, 54, 52, 59], [168, 239, 307]]", "is_correct_args": "[[33, 56, 108, 53, 65, 54, 52, 59], [168, 239, 307]]", "A*_args": "[\"[33, 56, 108, 53, 65, 54, 52, 59]\", \"[168, 239, 307]\"]"}
{"diff_sorted_id": "25", "problem_statement": "Given 7 labeled water jugs with capacities 75, 20, 64, 106, 88, 13, 107, 131 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 287, 394, 455 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 75, 3], [\"+\", 131, 3], [\"+\", 131, 3], [\"-\", 13, 3], [\"+\", 131, 3], [\"+\", 106, 2], [\"+\", 106, 2], [\"+\", 75, 2], [\"+\", 107, 2], [\"+\", 75, 1], [\"+\", 106, 1], [\"+\", 106, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.05149412155151367", "solution_depth": "12", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[75, 20, 64, 106, 88, 13, 107, 131], [287, 394, 455]]", "is_correct_args": "[[75, 20, 64, 106, 88, 13, 107, 131], [287, 394, 455]]", "A*_args": "[\"[75, 20, 64, 106, 88, 13, 107, 131]\", \"[287, 394, 455]\"]"}
{"diff_sorted_id": "26", "problem_statement": "Given 7 labeled water jugs with capacities 24, 132, 149, 62, 120, 61, 42 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 298, 430, 468 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 42, 3], [\"+\", 132, 3], [\"+\", 132, 3], [\"+\", 42, 3], [\"+\", 120, 3], [\"+\", 132, 2], [\"+\", 149, 2], [\"+\", 149, 2], [\"+\", 149, 1], [\"+\", 149, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.0418705940246582", "solution_depth": "10", "max_successor_states": "42", "num_vars_per_state": "3", "is_feasible_args": "[[24, 132, 149, 62, 120, 61, 42], [298, 430, 468]]", "is_correct_args": "[[24, 132, 149, 62, 120, 61, 42], [298, 430, 468]]", "A*_args": "[\"[24, 132, 149, 62, 120, 61, 42]\", \"[298, 430, 468]\"]"}
{"diff_sorted_id": "27", "problem_statement": "Given 7 labeled water jugs with capacities 80, 76, 132, 60, 83, 28, 75, 26 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 337, 378, 398 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 28, 3], [\"+\", 80, 3], [\"+\", 132, 3], [\"+\", 75, 3], [\"+\", 83, 3], [\"+\", 80, 2], [\"+\", 83, 2], [\"+\", 83, 2], [\"+\", 132, 2], [\"+\", 28, 1], [\"+\", 83, 1], [\"+\", 83, 1], [\"+\", 83, 1], [\"+\", 60, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.05565452575683594", "solution_depth": "14", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[80, 76, 132, 60, 83, 28, 75, 26], [337, 378, 398]]", "is_correct_args": "[[80, 76, 132, 60, 83, 28, 75, 26], [337, 378, 398]]", "A*_args": "[\"[80, 76, 132, 60, 83, 28, 75, 26]\", \"[337, 378, 398]\"]"}
{"diff_sorted_id": "28", "problem_statement": "Given 7 labeled water jugs with capacities 149, 128, 67, 43, 55, 38, 129 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 385, 387, 491 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 128, 3], [\"+\", 129, 3], [\"+\", 67, 3], [\"+\", 129, 3], [\"+\", 38, 3], [\"+\", 129, 2], [\"+\", 129, 2], [\"+\", 129, 2], [\"+\", 128, 1], [\"+\", 128, 1], [\"+\", 129, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.039963722229003906", "solution_depth": "11", "max_successor_states": "42", "num_vars_per_state": "3", "is_feasible_args": "[[149, 128, 67, 43, 55, 38, 129], [385, 387, 491]]", "is_correct_args": "[[149, 128, 67, 43, 55, 38, 129], [385, 387, 491]]", "A*_args": "[\"[149, 128, 67, 43, 55, 38, 129]\", \"[385, 387, 491]\"]"}
{"diff_sorted_id": "29", "problem_statement": "Given 7 labeled water jugs with capacities 150, 84, 29, 140, 98, 83, 32 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 243, 250, 446 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 140, 3], [\"+\", 140, 3], [\"+\", 83, 3], [\"+\", 83, 3], [\"+\", 83, 2], [\"+\", 83, 2], [\"+\", 84, 2], [\"+\", 83, 1], [\"+\", 150, 1], [\"-\", 140, 1], [\"+\", 150, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.039078712463378906", "solution_depth": "11", "max_successor_states": "42", "num_vars_per_state": "3", "is_feasible_args": "[[150, 84, 29, 140, 98, 83, 32], [243, 250, 446]]", "is_correct_args": "[[150, 84, 29, 140, 98, 83, 32], [243, 250, 446]]", "A*_args": "[\"[150, 84, 29, 140, 98, 83, 32]\", \"[243, 250, 446]\"]"}
{"diff_sorted_id": "30", "problem_statement": "Given 7 labeled water jugs with capacities 111, 84, 17, 22, 63, 75, 148, 64 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 253, 280, 448 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 63, 3], [\"+\", 111, 3], [\"+\", 148, 3], [\"-\", 22, 3], [\"+\", 148, 3], [\"+\", 22, 2], [\"+\", 84, 2], [\"+\", 111, 2], [\"+\", 63, 2], [\"+\", 75, 1], [\"+\", 84, 1], [\"-\", 17, 1], [\"+\", 111, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.0519099235534668", "solution_depth": "13", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[111, 84, 17, 22, 63, 75, 148, 64], [253, 280, 448]]", "is_correct_args": "[[111, 84, 17, 22, 63, 75, 148, 64], [253, 280, 448]]", "A*_args": "[\"[111, 84, 17, 22, 63, 75, 148, 64]\", \"[253, 280, 448]\"]"}
{"diff_sorted_id": "31", "problem_statement": "Given 7 labeled water jugs with capacities 14, 46, 13, 110, 38, 21, 45, 130 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 215, 219, 262 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 21, 3], [\"+\", 110, 3], [\"+\", 110, 3], [\"+\", 21, 3], [\"+\", 130, 2], [\"-\", 21, 2], [\"+\", 110, 2], [\"+\", 130, 1], [\"-\", 45, 1], [\"+\", 130, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.0400242805480957", "solution_depth": "10", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[14, 46, 13, 110, 38, 21, 45, 130], [215, 219, 262]]", "is_correct_args": "[[14, 46, 13, 110, 38, 21, 45, 130], [215, 219, 262]]", "A*_args": "[\"[14, 46, 13, 110, 38, 21, 45, 130]\", \"[215, 219, 262]\"]"}
{"diff_sorted_id": "32", "problem_statement": "Given 7 labeled water jugs with capacities 137, 29, 70, 138, 47, 64, 87, 16 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 295, 327, 442 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 137, 3], [\"+\", 138, 3], [\"+\", 29, 3], [\"+\", 138, 3], [\"+\", 87, 2], [\"+\", 87, 2], [\"+\", 16, 2], [\"+\", 137, 2], [\"+\", 87, 1], [\"+\", 138, 1], [\"+\", 70, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.042920589447021484", "solution_depth": "11", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[137, 29, 70, 138, 47, 64, 87, 16], [295, 327, 442]]", "is_correct_args": "[[137, 29, 70, 138, 47, 64, 87, 16], [295, 327, 442]]", "A*_args": "[\"[137, 29, 70, 138, 47, 64, 87, 16]\", \"[295, 327, 442]\"]"}
{"diff_sorted_id": "33", "problem_statement": "Given 7 labeled water jugs with capacities 146, 57, 69, 52, 132, 80, 145 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 456, 538, 549 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 69, 3], [\"+\", 145, 3], [\"+\", 146, 3], [\"+\", 132, 3], [\"+\", 57, 3], [\"+\", 57, 2], [\"+\", 146, 2], [\"+\", 146, 2], [\"+\", 57, 2], [\"+\", 132, 2], [\"+\", 52, 1], [\"+\", 69, 1], [\"+\", 146, 1], [\"+\", 57, 1], [\"+\", 132, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.0576624870300293", "solution_depth": "15", "max_successor_states": "42", "num_vars_per_state": "3", "is_feasible_args": "[[146, 57, 69, 52, 132, 80, 145], [456, 538, 549]]", "is_correct_args": "[[146, 57, 69, 52, 132, 80, 145], [456, 538, 549]]", "A*_args": "[\"[146, 57, 69, 52, 132, 80, 145]\", \"[456, 538, 549]\"]"}
{"diff_sorted_id": "34", "problem_statement": "Given 7 labeled water jugs with capacities 103, 109, 146, 101, 17, 145, 68 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 448, 466, 509 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 109, 3], [\"+\", 145, 3], [\"+\", 146, 3], [\"+\", 109, 3], [\"+\", 103, 2], [\"+\", 109, 2], [\"+\", 109, 2], [\"+\", 145, 2], [\"+\", 101, 1], [\"+\", 101, 1], [\"+\", 101, 1], [\"+\", 145, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.05138897895812988", "solution_depth": "12", "max_successor_states": "42", "num_vars_per_state": "3", "is_feasible_args": "[[103, 109, 146, 101, 17, 145, 68], [448, 466, 509]]", "is_correct_args": "[[103, 109, 146, 101, 17, 145, 68], [448, 466, 509]]", "A*_args": "[\"[103, 109, 146, 101, 17, 145, 68]\", \"[448, 466, 509]\"]"}
{"diff_sorted_id": "35", "problem_statement": "Given 7 labeled water jugs with capacities 120, 95, 49, 150, 83, 97, 44, 43 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 225, 334, 381 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 97, 3], [\"+\", 120, 3], [\"+\", 120, 3], [\"+\", 44, 3], [\"+\", 150, 2], [\"+\", 150, 2], [\"-\", 49, 2], [\"+\", 83, 2], [\"+\", 43, 1], [\"+\", 43, 1], [\"+\", 44, 1], [\"+\", 95, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.03785276412963867", "solution_depth": "12", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[120, 95, 49, 150, 83, 97, 44, 43], [225, 334, 381]]", "is_correct_args": "[[120, 95, 49, 150, 83, 97, 44, 43], [225, 334, 381]]", "A*_args": "[\"[120, 95, 49, 150, 83, 97, 44, 43]\", \"[225, 334, 381]\"]"}
{"diff_sorted_id": "36", "problem_statement": "Given 7 labeled water jugs with capacities 15, 138, 24, 10, 30, 82, 11, 94 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 239, 275, 286 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 138, 3], [\"+\", 138, 3], [\"+\", 10, 3], [\"+\", 138, 2], [\"-\", 11, 2], [\"+\", 138, 2], [\"+\", 10, 2], [\"+\", 10, 1], [\"+\", 82, 1], [\"+\", 138, 1], [\"-\", 15, 1], [\"+\", 24, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.038283348083496094", "solution_depth": "12", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[15, 138, 24, 10, 30, 82, 11, 94], [239, 275, 286]]", "is_correct_args": "[[15, 138, 24, 10, 30, 82, 11, 94], [239, 275, 286]]", "A*_args": "[\"[15, 138, 24, 10, 30, 82, 11, 94]\", \"[239, 275, 286]\"]"}
{"diff_sorted_id": "37", "problem_statement": "Given 9 labeled water jugs with capacities 19, 122, 104, 145, 38, 141, 126, 82, 37, 33 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 256, 399, 410 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 145, 3], [\"+\", 145, 3], [\"+\", 38, 3], [\"+\", 82, 3], [\"+\", 122, 2], [\"+\", 122, 2], [\"+\", 33, 2], [\"+\", 122, 2], [\"+\", 82, 1], [\"+\", 141, 1], [\"+\", 33, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.04917335510253906", "solution_depth": "11", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[19, 122, 104, 145, 38, 141, 126, 82, 37, 33], [256, 399, 410]]", "is_correct_args": "[[19, 122, 104, 145, 38, 141, 126, 82, 37, 33], [256, 399, 410]]", "A*_args": "[\"[19, 122, 104, 145, 38, 141, 126, 82, 37, 33]\", \"[256, 399, 410]\"]"}
{"diff_sorted_id": "38", "problem_statement": "Given 9 labeled water jugs with capacities 117, 128, 36, 129, 103, 53, 21, 119, 105, 26 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 394, 425, 426 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 53, 3], [\"+\", 117, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 26, 2], [\"+\", 128, 2], [\"+\", 128, 2], [\"+\", 26, 2], [\"+\", 117, 2], [\"+\", 117, 1], [\"+\", 128, 1], [\"+\", 21, 1], [\"+\", 128, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.05204272270202637", "solution_depth": "13", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[117, 128, 36, 129, 103, 53, 21, 119, 105, 26], [394, 425, 426]]", "is_correct_args": "[[117, 128, 36, 129, 103, 53, 21, 119, 105, 26], [394, 425, 426]]", "A*_args": "[\"[117, 128, 36, 129, 103, 53, 21, 119, 105, 26]\", \"[394, 425, 426]\"]"}
{"diff_sorted_id": "39", "problem_statement": "Given 9 labeled water jugs with capacities 76, 63, 111, 59, 11, 108, 16, 66, 75, 67 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 191, 269, 328 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 66, 3], [\"+\", 75, 3], [\"+\", 76, 3], [\"+\", 111, 3], [\"+\", 59, 2], [\"+\", 75, 2], [\"+\", 76, 2], [\"+\", 59, 2], [\"+\", 75, 1], [\"+\", 108, 1], [\"-\", 67, 1], [\"+\", 75, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.045966386795043945", "solution_depth": "12", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[76, 63, 111, 59, 11, 108, 16, 66, 75, 67], [191, 269, 328]]", "is_correct_args": "[[76, 63, 111, 59, 11, 108, 16, 66, 75, 67], [191, 269, 328]]", "A*_args": "[\"[76, 63, 111, 59, 11, 108, 16, 66, 75, 67]\", \"[191, 269, 328]\"]"}
{"diff_sorted_id": "40", "problem_statement": "Given 9 labeled water jugs with capacities 62, 144, 80, 72, 100, 127, 18, 82, 42, 99 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 258, 310, 514 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 82, 3], [\"+\", 144, 3], [\"+\", 144, 3], [\"+\", 144, 3], [\"+\", 62, 2], [\"+\", 144, 2], [\"+\", 42, 2], [\"+\", 62, 2], [\"+\", 42, 1], [\"+\", 72, 1], [\"+\", 144, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.03391599655151367", "solution_depth": "11", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[62, 144, 80, 72, 100, 127, 18, 82, 42, 99], [258, 310, 514]]", "is_correct_args": "[[62, 144, 80, 72, 100, 127, 18, 82, 42, 99], [258, 310, 514]]", "A*_args": "[\"[62, 144, 80, 72, 100, 127, 18, 82, 42, 99]\", \"[258, 310, 514]\"]"}
{"diff_sorted_id": "41", "problem_statement": "Given 9 labeled water jugs with capacities 80, 69, 12, 52, 107, 53, 82, 95, 108 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 170, 385, 499 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 69, 3], [\"+\", 107, 3], [\"+\", 107, 3], [\"+\", 108, 3], [\"+\", 108, 3], [\"+\", 52, 2], [\"+\", 107, 2], [\"+\", 107, 2], [\"+\", 107, 2], [\"+\", 12, 2], [\"+\", 52, 1], [\"+\", 107, 1], [\"-\", 69, 1], [\"+\", 80, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.027560949325561523", "solution_depth": "14", "max_successor_states": "54", "num_vars_per_state": "3", "is_feasible_args": "[[80, 69, 12, 52, 107, 53, 82, 95, 108], [170, 385, 499]]", "is_correct_args": "[[80, 69, 12, 52, 107, 53, 82, 95, 108], [170, 385, 499]]", "A*_args": "[\"[80, 69, 12, 52, 107, 53, 82, 95, 108]\", \"[170, 385, 499]\"]"}
{"diff_sorted_id": "42", "problem_statement": "Given 9 labeled water jugs with capacities 36, 72, 16, 80, 45, 67, 38, 32, 149, 37 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 201, 202, 233 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 32, 3], [\"+\", 36, 3], [\"+\", 149, 3], [\"+\", 16, 3], [\"+\", 37, 2], [\"+\", 149, 2], [\"+\", 16, 2], [\"+\", 36, 1], [\"+\", 149, 1], [\"+\", 16, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.032448768615722656", "solution_depth": "10", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[36, 72, 16, 80, 45, 67, 38, 32, 149, 37], [201, 202, 233]]", "is_correct_args": "[[36, 72, 16, 80, 45, 67, 38, 32, 149, 37], [201, 202, 233]]", "A*_args": "[\"[36, 72, 16, 80, 45, 67, 38, 32, 149, 37]\", \"[201, 202, 233]\"]"}
{"diff_sorted_id": "43", "problem_statement": "Given 9 labeled water jugs with capacities 104, 14, 83, 46, 128, 34, 137, 15, 19, 126 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 342, 373, 447 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 34, 3], [\"+\", 126, 3], [\"+\", 137, 3], [\"+\", 46, 3], [\"+\", 104, 3], [\"+\", 104, 2], [\"+\", 126, 2], [\"+\", 15, 2], [\"+\", 128, 2], [\"+\", 104, 1], [\"+\", 126, 1], [\"-\", 14, 1], [\"+\", 126, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.06156110763549805", "solution_depth": "13", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[104, 14, 83, 46, 128, 34, 137, 15, 19, 126], [342, 373, 447]]", "is_correct_args": "[[104, 14, 83, 46, 128, 34, 137, 15, 19, 126], [342, 373, 447]]", "A*_args": "[\"[104, 14, 83, 46, 128, 34, 137, 15, 19, 126]\", \"[342, 373, 447]\"]"}
{"diff_sorted_id": "44", "problem_statement": "Given 9 labeled water jugs with capacities 67, 55, 84, 148, 107, 114, 17, 143, 40, 39 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 192, 247, 479 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 143, 3], [\"+\", 148, 3], [\"+\", 40, 3], [\"+\", 148, 3], [\"+\", 143, 2], [\"-\", 39, 2], [\"+\", 143, 2], [\"+\", 39, 1], [\"+\", 39, 1], [\"+\", 114, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.030488252639770508", "solution_depth": "10", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[67, 55, 84, 148, 107, 114, 17, 143, 40, 39], [192, 247, 479]]", "is_correct_args": "[[67, 55, 84, 148, 107, 114, 17, 143, 40, 39], [192, 247, 479]]", "A*_args": "[\"[67, 55, 84, 148, 107, 114, 17, 143, 40, 39]\", \"[192, 247, 479]\"]"}
{"diff_sorted_id": "45", "problem_statement": "Given 9 labeled water jugs with capacities 116, 16, 79, 75, 30, 87, 28, 96, 15, 134 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 155, 208, 295 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 30, 3], [\"+\", 116, 3], [\"+\", 134, 3], [\"+\", 15, 3], [\"+\", 96, 2], [\"+\", 96, 2], [\"+\", 16, 2], [\"+\", 75, 1], [\"-\", 16, 1], [\"+\", 96, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.038698434829711914", "solution_depth": "10", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[116, 16, 79, 75, 30, 87, 28, 96, 15, 134], [155, 208, 295]]", "is_correct_args": "[[116, 16, 79, 75, 30, 87, 28, 96, 15, 134], [155, 208, 295]]", "A*_args": "[\"[116, 16, 79, 75, 30, 87, 28, 96, 15, 134]\", \"[155, 208, 295]\"]"}
{"diff_sorted_id": "46", "problem_statement": "Given 9 labeled water jugs with capacities 20, 142, 147, 48, 29, 113, 17, 18, 112, 68 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 287, 423, 583 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 142, 3], [\"+\", 147, 3], [\"+\", 147, 3], [\"+\", 147, 3], [\"+\", 112, 2], [\"+\", 147, 2], [\"+\", 17, 2], [\"+\", 147, 2], [\"+\", 142, 1], [\"+\", 142, 1], [\"-\", 17, 1], [\"+\", 20, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.04404854774475098", "solution_depth": "12", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[20, 142, 147, 48, 29, 113, 17, 18, 112, 68], [287, 423, 583]]", "is_correct_args": "[[20, 142, 147, 48, 29, 113, 17, 18, 112, 68], [287, 423, 583]]", "A*_args": "[\"[20, 142, 147, 48, 29, 113, 17, 18, 112, 68]\", \"[287, 423, 583]\"]"}
{"diff_sorted_id": "47", "problem_statement": "Given 9 labeled water jugs with capacities 141, 101, 126, 26, 120, 75, 110, 108, 97, 100 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 254, 456, 579 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 75, 3], [\"+\", 126, 3], [\"+\", 126, 3], [\"+\", 126, 3], [\"+\", 126, 3], [\"+\", 75, 2], [\"+\", 120, 2], [\"+\", 120, 2], [\"+\", 141, 2], [\"+\", 108, 1], [\"+\", 120, 1], [\"+\", 26, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.051166534423828125", "solution_depth": "12", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[141, 101, 126, 26, 120, 75, 110, 108, 97, 100], [254, 456, 579]]", "is_correct_args": "[[141, 101, 126, 26, 120, 75, 110, 108, 97, 100], [254, 456, 579]]", "A*_args": "[\"[141, 101, 126, 26, 120, 75, 110, 108, 97, 100]\", \"[254, 456, 579]\"]"}
{"diff_sorted_id": "48", "problem_statement": "Given 9 labeled water jugs with capacities 121, 87, 150, 52, 43, 139, 90, 44, 59, 146 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 249, 446, 530 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 43, 3], [\"+\", 146, 3], [\"+\", 150, 3], [\"+\", 52, 3], [\"+\", 139, 3], [\"+\", 146, 2], [\"+\", 150, 2], [\"+\", 150, 2], [\"+\", 59, 1], [\"+\", 146, 1], [\"+\", 44, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.052127838134765625", "solution_depth": "11", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[121, 87, 150, 52, 43, 139, 90, 44, 59, 146], [249, 446, 530]]", "is_correct_args": "[[121, 87, 150, 52, 43, 139, 90, 44, 59, 146], [249, 446, 530]]", "A*_args": "[\"[121, 87, 150, 52, 43, 139, 90, 44, 59, 146]\", \"[249, 446, 530]\"]"}
{"diff_sorted_id": "49", "problem_statement": "Given 9 labeled water jugs with capacities 22, 98, 38, 116, 140, 115, 21, 80, 92, 27 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 279, 488, 578 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 116, 3], [\"+\", 140, 3], [\"+\", 92, 3], [\"+\", 115, 3], [\"+\", 115, 3], [\"+\", 92, 2], [\"+\", 140, 2], [\"+\", 140, 2], [\"+\", 116, 2], [\"+\", 21, 1], [\"+\", 115, 1], [\"+\", 116, 1], [\"+\", 27, 1]]", "opt_solution_cost": "13", "opt_solution_compute_t": "0.04842829704284668", "solution_depth": "13", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[22, 98, 38, 116, 140, 115, 21, 80, 92, 27], [279, 488, 578]]", "is_correct_args": "[[22, 98, 38, 116, 140, 115, 21, 80, 92, 27], [279, 488, 578]]", "A*_args": "[\"[22, 98, 38, 116, 140, 115, 21, 80, 92, 27]\", \"[279, 488, 578]\"]"}
{"diff_sorted_id": "50", "problem_statement": "Given 9 labeled water jugs with capacities 137, 147, 73, 131, 91, 94, 72, 31, 103, 78 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 263, 298, 505 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 94, 3], [\"+\", 137, 3], [\"+\", 137, 3], [\"+\", 137, 3], [\"+\", 73, 2], [\"+\", 78, 2], [\"+\", 147, 2], [\"+\", 91, 1], [\"+\", 94, 1], [\"+\", 78, 1]]", "opt_solution_cost": "10", "opt_solution_compute_t": "0.048264265060424805", "solution_depth": "10", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[137, 147, 73, 131, 91, 94, 72, 31, 103, 78], [263, 298, 505]]", "is_correct_args": "[[137, 147, 73, 131, 91, 94, 72, 31, 103, 78], [263, 298, 505]]", "A*_args": "[\"[137, 147, 73, 131, 91, 94, 72, 31, 103, 78]\", \"[263, 298, 505]\"]"}
{"diff_sorted_id": "51", "problem_statement": "Given 9 labeled water jugs with capacities 51, 129, 150, 138, 128, 72, 69, 111, 75 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 454, 547, 601 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 69, 3], [\"+\", 138, 3], [\"+\", 138, 3], [\"+\", 69, 2], [\"+\", 128, 2], [\"+\", 150, 2], [\"+\", 72, 2], [\"+\", 128, 2], [\"+\", 128, 1], [\"+\", 128, 1], [\"+\", 69, 1], [\"+\", 129, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.07053852081298828", "solution_depth": "14", "max_successor_states": "54", "num_vars_per_state": "3", "is_feasible_args": "[[51, 129, 150, 138, 128, 72, 69, 111, 75], [454, 547, 601]]", "is_correct_args": "[[51, 129, 150, 138, 128, 72, 69, 111, 75], [454, 547, 601]]", "A*_args": "[\"[51, 129, 150, 138, 128, 72, 69, 111, 75]\", \"[454, 547, 601]\"]"}
{"diff_sorted_id": "52", "problem_statement": "Given 9 labeled water jugs with capacities 45, 141, 50, 114, 104, 19, 78, 18, 23, 133 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 253, 337, 385 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 114, 3], [\"+\", 133, 3], [\"+\", 133, 3], [\"-\", 18, 3], [\"+\", 23, 3], [\"+\", 45, 2], [\"+\", 133, 2], [\"+\", 18, 2], [\"+\", 141, 2], [\"+\", 104, 1], [\"+\", 104, 1], [\"+\", 45, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.03950142860412598", "solution_depth": "12", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[45, 141, 50, 114, 104, 19, 78, 18, 23, 133], [253, 337, 385]]", "is_correct_args": "[[45, 141, 50, 114, 104, 19, 78, 18, 23, 133], [253, 337, 385]]", "A*_args": "[\"[45, 141, 50, 114, 104, 19, 78, 18, 23, 133]\", \"[253, 337, 385]\"]"}
{"diff_sorted_id": "53", "problem_statement": "Given 9 labeled water jugs with capacities 139, 143, 17, 138, 133, 19, 126, 102, 65 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 349, 415, 458 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 17, 3], [\"+\", 138, 3], [\"+\", 143, 3], [\"+\", 17, 3], [\"+\", 143, 3], [\"+\", 133, 2], [\"+\", 139, 2], [\"+\", 143, 2], [\"+\", 65, 1], [\"+\", 126, 1], [\"+\", 19, 1], [\"+\", 139, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.036029815673828125", "solution_depth": "12", "max_successor_states": "54", "num_vars_per_state": "3", "is_feasible_args": "[[139, 143, 17, 138, 133, 19, 126, 102, 65], [349, 415, 458]]", "is_correct_args": "[[139, 143, 17, 138, 133, 19, 126, 102, 65], [349, 415, 458]]", "A*_args": "[\"[139, 143, 17, 138, 133, 19, 126, 102, 65]\", \"[349, 415, 458]\"]"}
{"diff_sorted_id": "54", "problem_statement": "Given 9 labeled water jugs with capacities 45, 67, 134, 133, 86, 66, 107, 94, 124, 122 liters, we aim to fill 3 unlabeled buckets, numbered 1 to 3 and arranged in a line in ascending order, with 229, 303, 307 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 66, 3], [\"+\", 107, 3], [\"+\", 134, 3], [\"+\", 124, 2], [\"+\", 134, 2], [\"+\", 45, 2], [\"+\", 107, 1], [\"+\", 122, 1]]", "opt_solution_cost": "8", "opt_solution_compute_t": "0.02436041831970215", "solution_depth": "8", "max_successor_states": "60", "num_vars_per_state": "3", "is_feasible_args": "[[45, 67, 134, 133, 86, 66, 107, 94, 124, 122], [229, 303, 307]]", "is_correct_args": "[[45, 67, 134, 133, 86, 66, 107, 94, 124, 122], [229, 303, 307]]", "A*_args": "[\"[45, 67, 134, 133, 86, 66, 107, 94, 124, 122]\", \"[229, 303, 307]\"]"}
{"diff_sorted_id": "55", "problem_statement": "Given 5 labeled water jugs with capacities 33, 87, 48, 30, 61, 60 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 170, 225, 238, 317 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 60, 4], [\"+\", 61, 4], [\"+\", 87, 4], [\"+\", 48, 4], [\"+\", 61, 4], [\"+\", 60, 3], [\"+\", 61, 3], [\"+\", 30, 3], [\"+\", 87, 3], [\"+\", 48, 2], [\"+\", 60, 2], [\"+\", 87, 2], [\"+\", 30, 2], [\"+\", 61, 1], [\"+\", 61, 1], [\"+\", 48, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.039655208587646484", "solution_depth": "16", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[33, 87, 48, 30, 61, 60], [170, 225, 238, 317]]", "is_correct_args": "[[33, 87, 48, 30, 61, 60], [170, 225, 238, 317]]", "A*_args": "[\"[33, 87, 48, 30, 61, 60]\", \"[170, 225, 238, 317]\"]"}
{"diff_sorted_id": "56", "problem_statement": "Given 5 labeled water jugs with capacities 12, 88, 148, 87, 143, 131 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 260, 295, 331, 394 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 87, 4], [\"+\", 148, 4], [\"+\", 148, 4], [\"-\", 88, 4], [\"+\", 87, 4], [\"+\", 12, 4], [\"+\", 88, 3], [\"+\", 88, 3], [\"+\", 12, 3], [\"+\", 143, 3], [\"+\", 131, 2], [\"-\", 12, 2], [\"+\", 88, 2], [\"+\", 88, 2], [\"+\", 12, 1], [\"+\", 88, 1], [\"+\", 148, 1], [\"+\", 12, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.03827953338623047", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[12, 88, 148, 87, 143, 131], [260, 295, 331, 394]]", "is_correct_args": "[[12, 88, 148, 87, 143, 131], [260, 295, 331, 394]]", "A*_args": "[\"[12, 88, 148, 87, 143, 131]\", \"[260, 295, 331, 394]\"]"}
{"diff_sorted_id": "57", "problem_statement": "Given 5 labeled water jugs with capacities 15, 20, 141, 104, 67, 14 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 230, 267, 278, 318 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 67, 4], [\"+\", 104, 4], [\"+\", 141, 4], [\"-\", 14, 4], [\"+\", 20, 4], [\"+\", 67, 3], [\"+\", 67, 3], [\"+\", 104, 3], [\"+\", 20, 3], [\"+\", 20, 3], [\"+\", 141, 2], [\"-\", 15, 2], [\"+\", 141, 2], [\"+\", 104, 1], [\"-\", 15, 1], [\"+\", 141, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.03609800338745117", "solution_depth": "16", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[15, 20, 141, 104, 67, 14], [230, 267, 278, 318]]", "is_correct_args": "[[15, 20, 141, 104, 67, 14], [230, 267, 278, 318]]", "A*_args": "[\"[15, 20, 141, 104, 67, 14]\", \"[230, 267, 278, 318]\"]"}
{"diff_sorted_id": "58", "problem_statement": "Given 5 labeled water jugs with capacities 59, 20, 21, 62, 61, 60 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 149, 156, 173, 186 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 62, 4], [\"+\", 62, 4], [\"+\", 62, 4], [\"+\", 59, 3], [\"+\", 59, 3], [\"-\", 21, 3], [\"+\", 59, 3], [\"-\", 62, 3], [\"+\", 20, 3], [\"+\", 59, 3], [\"+\", 59, 2], [\"+\", 59, 2], [\"-\", 21, 2], [\"+\", 59, 2], [\"+\", 20, 1], [\"+\", 61, 1], [\"+\", 62, 1], [\"-\", 59, 1], [\"+\", 62, 1], [\"-\", 59, 1], [\"+\", 62, 1]]", "opt_solution_cost": "21", "opt_solution_compute_t": "0.03367137908935547", "solution_depth": "21", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[59, 20, 21, 62, 61, 60], [149, 156, 173, 186]]", "is_correct_args": "[[59, 20, 21, 62, 61, 60], [149, 156, 173, 186]]", "A*_args": "[\"[59, 20, 21, 62, 61, 60]\", \"[149, 156, 173, 186]\"]"}
{"diff_sorted_id": "59", "problem_statement": "Given 5 labeled water jugs with capacities 128, 67, 44, 31, 127, 15 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 258, 261, 415, 430 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 31, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 15, 4], [\"+\", 31, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 67, 2], [\"+\", 67, 2], [\"+\", 127, 2], [\"+\", 128, 1], [\"+\", 128, 1], [\"-\", 44, 1], [\"+\", 15, 1], [\"+\", 31, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.06383585929870605", "solution_depth": "17", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[128, 67, 44, 31, 127, 15], [258, 261, 415, 430]]", "is_correct_args": "[[128, 67, 44, 31, 127, 15], [258, 261, 415, 430]]", "A*_args": "[\"[128, 67, 44, 31, 127, 15]\", \"[258, 261, 415, 430]\"]"}
{"diff_sorted_id": "60", "problem_statement": "Given 5 labeled water jugs with capacities 78, 68, 49, 82, 77, 88 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 176, 189, 251, 285 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 77, 4], [\"+\", 77, 4], [\"+\", 49, 4], [\"+\", 82, 4], [\"+\", 68, 3], [\"+\", 68, 3], [\"+\", 82, 3], [\"-\", 49, 3], [\"+\", 82, 3], [\"+\", 68, 2], [\"+\", 82, 2], [\"-\", 49, 2], [\"+\", 88, 2], [\"+\", 88, 1], [\"+\", 88, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.06066584587097168", "solution_depth": "15", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[78, 68, 49, 82, 77, 88], [176, 189, 251, 285]]", "is_correct_args": "[[78, 68, 49, 82, 77, 88], [176, 189, 251, 285]]", "A*_args": "[\"[78, 68, 49, 82, 77, 88]\", \"[176, 189, 251, 285]\"]"}
{"diff_sorted_id": "61", "problem_statement": "Given 5 labeled water jugs with capacities 56, 92, 66, 85, 65, 136 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 209, 293, 326, 379 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 66, 4], [\"+\", 85, 4], [\"+\", 92, 4], [\"+\", 136, 4], [\"+\", 85, 3], [\"+\", 85, 3], [\"+\", 136, 3], [\"-\", 65, 3], [\"+\", 85, 3], [\"+\", 65, 2], [\"+\", 92, 2], [\"+\", 136, 2], [\"+\", 66, 1], [\"+\", 92, 1], [\"-\", 85, 1], [\"+\", 136, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.05174422264099121", "solution_depth": "16", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[56, 92, 66, 85, 65, 136], [209, 293, 326, 379]]", "is_correct_args": "[[56, 92, 66, 85, 65, 136], [209, 293, 326, 379]]", "A*_args": "[\"[56, 92, 66, 85, 65, 136]\", \"[209, 293, 326, 379]\"]"}
{"diff_sorted_id": "62", "problem_statement": "Given 5 labeled water jugs with capacities 54, 89, 26, 70, 71, 128 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 240, 242, 246, 329 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 54, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"-\", 70, 4], [\"+\", 89, 4], [\"+\", 70, 3], [\"+\", 70, 3], [\"+\", 89, 3], [\"-\", 54, 3], [\"+\", 71, 3], [\"+\", 70, 2], [\"+\", 70, 2], [\"-\", 26, 2], [\"+\", 128, 2], [\"+\", 54, 1], [\"+\", 71, 1], [\"+\", 89, 1], [\"+\", 26, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.041527748107910156", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[54, 89, 26, 70, 71, 128], [240, 242, 246, 329]]", "is_correct_args": "[[54, 89, 26, 70, 71, 128], [240, 242, 246, 329]]", "A*_args": "[\"[54, 89, 26, 70, 71, 128]\", \"[240, 242, 246, 329]\"]"}
{"diff_sorted_id": "63", "problem_statement": "Given 5 labeled water jugs with capacities 123, 124, 133, 85, 74 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 276, 277, 355, 425 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 85, 4], [\"+\", 133, 4], [\"+\", 74, 4], [\"+\", 133, 4], [\"+\", 74, 3], [\"+\", 74, 3], [\"+\", 74, 3], [\"+\", 133, 3], [\"+\", 85, 2], [\"+\", 133, 2], [\"-\", 74, 2], [\"+\", 133, 2], [\"+\", 133, 1], [\"+\", 133, 1], [\"-\", 123, 1], [\"+\", 133, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.024725675582885742", "solution_depth": "16", "max_successor_states": "40", "num_vars_per_state": "3", "is_feasible_args": "[[123, 124, 133, 85, 74], [276, 277, 355, 425]]", "is_correct_args": "[[123, 124, 133, 85, 74], [276, 277, 355, 425]]", "A*_args": "[\"[123, 124, 133, 85, 74]\", \"[276, 277, 355, 425]\"]"}
{"diff_sorted_id": "64", "problem_statement": "Given 5 labeled water jugs with capacities 14, 42, 113, 131, 41, 147 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 240, 257, 350, 369 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 41, 4], [\"+\", 42, 4], [\"+\", 113, 4], [\"+\", 131, 4], [\"+\", 42, 4], [\"+\", 42, 3], [\"+\", 147, 3], [\"+\", 14, 3], [\"+\", 147, 3], [\"+\", 42, 2], [\"+\", 42, 2], [\"+\", 42, 2], [\"+\", 131, 2], [\"+\", 113, 1], [\"+\", 113, 1], [\"+\", 14, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.02796316146850586", "solution_depth": "16", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[14, 42, 113, 131, 41, 147], [240, 257, 350, 369]]", "is_correct_args": "[[14, 42, 113, 131, 41, 147], [240, 257, 350, 369]]", "A*_args": "[\"[14, 42, 113, 131, 41, 147]\", \"[240, 257, 350, 369]\"]"}
{"diff_sorted_id": "65", "problem_statement": "Given 5 labeled water jugs with capacities 141, 116, 66, 83, 142 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 397, 401, 419, 425 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 141, 4], [\"+\", 142, 4], [\"+\", 142, 4], [\"+\", 142, 3], [\"+\", 142, 3], [\"-\", 66, 3], [\"+\", 142, 3], [\"-\", 83, 3], [\"+\", 142, 3], [\"+\", 116, 2], [\"+\", 142, 2], [\"+\", 142, 2], [\"-\", 141, 2], [\"+\", 142, 2], [\"+\", 66, 1], [\"+\", 66, 1], [\"+\", 66, 1], [\"+\", 116, 1], [\"+\", 83, 1]]", "opt_solution_cost": "19", "opt_solution_compute_t": "0.0269773006439209", "solution_depth": "19", "max_successor_states": "40", "num_vars_per_state": "3", "is_feasible_args": "[[141, 116, 66, 83, 142], [397, 401, 419, 425]]", "is_correct_args": "[[141, 116, 66, 83, 142], [397, 401, 419, 425]]", "A*_args": "[\"[141, 116, 66, 83, 142]\", \"[397, 401, 419, 425]\"]"}
{"diff_sorted_id": "66", "problem_statement": "Given 5 labeled water jugs with capacities 122, 121, 124, 28, 89, 73 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 270, 311, 372, 389 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 121, 4], [\"+\", 122, 4], [\"+\", 73, 4], [\"+\", 73, 4], [\"+\", 124, 3], [\"+\", 124, 3], [\"+\", 124, 3], [\"+\", 73, 2], [\"+\", 89, 2], [\"+\", 28, 2], [\"+\", 121, 2], [\"+\", 121, 1], [\"+\", 121, 1], [\"+\", 28, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.027414321899414062", "solution_depth": "14", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[122, 121, 124, 28, 89, 73], [270, 311, 372, 389]]", "is_correct_args": "[[122, 121, 124, 28, 89, 73], [270, 311, 372, 389]]", "A*_args": "[\"[122, 121, 124, 28, 89, 73]\", \"[270, 311, 372, 389]\"]"}
{"diff_sorted_id": "67", "problem_statement": "Given 5 labeled water jugs with capacities 116, 115, 29, 129, 39, 114 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 353, 368, 396, 403 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 116, 4], [\"+\", 129, 4], [\"+\", 29, 4], [\"+\", 129, 4], [\"+\", 114, 3], [\"+\", 129, 3], [\"+\", 39, 3], [\"+\", 114, 3], [\"+\", 114, 2], [\"+\", 115, 2], [\"+\", 129, 2], [\"-\", 29, 2], [\"+\", 39, 2], [\"+\", 114, 1], [\"+\", 114, 1], [\"+\", 115, 1], [\"-\", 29, 1], [\"+\", 39, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.03425145149230957", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[116, 115, 29, 129, 39, 114], [353, 368, 396, 403]]", "is_correct_args": "[[116, 115, 29, 129, 39, 114], [353, 368, 396, 403]]", "A*_args": "[\"[116, 115, 29, 129, 39, 114]\", \"[353, 368, 396, 403]\"]"}
{"diff_sorted_id": "68", "problem_statement": "Given 5 labeled water jugs with capacities 73, 129, 120, 38, 72, 138 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 278, 295, 323, 383 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 72, 4], [\"+\", 138, 4], [\"+\", 138, 4], [\"-\", 38, 4], [\"+\", 73, 4], [\"+\", 120, 3], [\"+\", 138, 3], [\"-\", 73, 3], [\"+\", 138, 3], [\"+\", 72, 2], [\"+\", 138, 2], [\"+\", 38, 2], [\"-\", 73, 2], [\"+\", 120, 2], [\"+\", 120, 1], [\"+\", 120, 1], [\"+\", 38, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.030396461486816406", "solution_depth": "17", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[73, 129, 120, 38, 72, 138], [278, 295, 323, 383]]", "is_correct_args": "[[73, 129, 120, 38, 72, 138], [278, 295, 323, 383]]", "A*_args": "[\"[73, 129, 120, 38, 72, 138]\", \"[278, 295, 323, 383]\"]"}
{"diff_sorted_id": "69", "problem_statement": "Given 5 labeled water jugs with capacities 34, 98, 27, 19, 52, 53 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 257, 260, 269, 291 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 27, 4], [\"+\", 98, 4], [\"+\", 98, 4], [\"+\", 34, 4], [\"+\", 34, 4], [\"+\", 19, 3], [\"+\", 98, 3], [\"+\", 98, 3], [\"+\", 27, 3], [\"+\", 27, 3], [\"+\", 98, 2], [\"+\", 98, 2], [\"-\", 34, 2], [\"+\", 98, 2], [\"+\", 98, 1], [\"+\", 98, 1], [\"+\", 27, 1], [\"+\", 34, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.034804582595825195", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[34, 98, 27, 19, 52, 53], [257, 260, 269, 291]]", "is_correct_args": "[[34, 98, 27, 19, 52, 53], [257, 260, 269, 291]]", "A*_args": "[\"[34, 98, 27, 19, 52, 53]\", \"[257, 260, 269, 291]\"]"}
{"diff_sorted_id": "70", "problem_statement": "Given 5 labeled water jugs with capacities 44, 128, 127, 85, 40, 125 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 283, 295, 428, 428 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 44, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 44, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 127, 2], [\"+\", 128, 2], [\"+\", 40, 2], [\"+\", 40, 1], [\"+\", 40, 1], [\"+\", 40, 1], [\"+\", 40, 1], [\"+\", 40, 1], [\"-\", 44, 1], [\"+\", 127, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.03569626808166504", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[44, 128, 127, 85, 40, 125], [283, 295, 428, 428]]", "is_correct_args": "[[44, 128, 127, 85, 40, 125], [283, 295, 428, 428]]", "A*_args": "[\"[44, 128, 127, 85, 40, 125]\", \"[283, 295, 428, 428]\"]"}
{"diff_sorted_id": "71", "problem_statement": "Given 5 labeled water jugs with capacities 141, 92, 12, 77, 49, 140 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 304, 333, 349, 413 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 77, 4], [\"+\", 92, 4], [\"+\", 92, 4], [\"+\", 140, 4], [\"+\", 12, 4], [\"+\", 12, 3], [\"+\", 92, 3], [\"+\", 92, 3], [\"+\", 12, 3], [\"+\", 141, 3], [\"+\", 77, 2], [\"+\", 140, 2], [\"+\", 12, 2], [\"+\", 12, 2], [\"+\", 92, 2], [\"+\", 12, 1], [\"+\", 140, 1], [\"+\", 140, 1], [\"+\", 12, 1]]", "opt_solution_cost": "19", "opt_solution_compute_t": "0.04270505905151367", "solution_depth": "19", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[141, 92, 12, 77, 49, 140], [304, 333, 349, 413]]", "is_correct_args": "[[141, 92, 12, 77, 49, 140], [304, 333, 349, 413]]", "A*_args": "[\"[141, 92, 12, 77, 49, 140]\", \"[304, 333, 349, 413]\"]"}
{"diff_sorted_id": "72", "problem_statement": "Given 5 labeled water jugs with capacities 57, 98, 149, 99, 105, 28 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 281, 401, 423, 427 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "5", "opt_solution": "[[\"+\", 98, 4], [\"+\", 98, 4], [\"+\", 98, 4], [\"+\", 105, 4], [\"+\", 28, 4], [\"+\", 98, 3], [\"+\", 99, 3], [\"+\", 99, 3], [\"+\", 99, 3], [\"+\", 28, 3], [\"+\", 98, 2], [\"+\", 99, 2], [\"+\", 99, 2], [\"+\", 105, 2], [\"+\", 28, 1], [\"+\", 98, 1], [\"+\", 98, 1], [\"+\", 57, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.04359149932861328", "solution_depth": "18", "max_successor_states": "48", "num_vars_per_state": "3", "is_feasible_args": "[[57, 98, 149, 99, 105, 28], [281, 401, 423, 427]]", "is_correct_args": "[[57, 98, 149, 99, 105, 28], [281, 401, 423, 427]]", "A*_args": "[\"[57, 98, 149, 99, 105, 28]\", \"[281, 401, 423, 427]\"]"}
{"diff_sorted_id": "73", "problem_statement": "Given 7 labeled water jugs with capacities 56, 81, 132, 41, 86, 128, 57, 138 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 232, 401, 444, 451 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 138, 4], [\"+\", 57, 4], [\"+\", 128, 3], [\"+\", 128, 3], [\"+\", 56, 3], [\"+\", 132, 3], [\"+\", 132, 2], [\"+\", 132, 2], [\"+\", 56, 2], [\"+\", 81, 2], [\"+\", 57, 1], [\"+\", 128, 1], [\"-\", 81, 1], [\"+\", 128, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.05008697509765625", "solution_depth": "16", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[56, 81, 132, 41, 86, 128, 57, 138], [232, 401, 444, 451]]", "is_correct_args": "[[56, 81, 132, 41, 86, 128, 57, 138], [232, 401, 444, 451]]", "A*_args": "[\"[56, 81, 132, 41, 86, 128, 57, 138]\", \"[232, 401, 444, 451]\"]"}
{"diff_sorted_id": "74", "problem_statement": "Given 7 labeled water jugs with capacities 91, 141, 56, 65, 89, 40, 39, 92 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 294, 375, 459, 466 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 92, 4], [\"+\", 141, 4], [\"+\", 141, 4], [\"+\", 92, 4], [\"+\", 141, 3], [\"+\", 141, 3], [\"+\", 141, 3], [\"-\", 56, 3], [\"+\", 92, 3], [\"+\", 56, 2], [\"+\", 89, 2], [\"+\", 89, 2], [\"+\", 141, 2], [\"+\", 56, 1], [\"+\", 91, 1], [\"+\", 91, 1], [\"+\", 56, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.0752251148223877", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[91, 141, 56, 65, 89, 40, 39, 92], [294, 375, 459, 466]]", "is_correct_args": "[[91, 141, 56, 65, 89, 40, 39, 92], [294, 375, 459, 466]]", "A*_args": "[\"[91, 141, 56, 65, 89, 40, 39, 92]\", \"[294, 375, 459, 466]\"]"}
{"diff_sorted_id": "75", "problem_statement": "Given 7 labeled water jugs with capacities 98, 121, 131, 126, 141, 125, 20 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 309, 395, 407, 429 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 131, 4], [\"+\", 141, 4], [\"+\", 141, 4], [\"-\", 125, 4], [\"+\", 141, 4], [\"+\", 125, 3], [\"+\", 141, 3], [\"+\", 141, 3], [\"+\", 125, 2], [\"+\", 125, 2], [\"+\", 20, 2], [\"+\", 125, 2], [\"+\", 141, 1], [\"+\", 141, 1], [\"-\", 98, 1], [\"+\", 125, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.04790830612182617", "solution_depth": "16", "max_successor_states": "56", "num_vars_per_state": "3", "is_feasible_args": "[[98, 121, 131, 126, 141, 125, 20], [309, 395, 407, 429]]", "is_correct_args": "[[98, 121, 131, 126, 141, 125, 20], [309, 395, 407, 429]]", "A*_args": "[\"[98, 121, 131, 126, 141, 125, 20]\", \"[309, 395, 407, 429]\"]"}
{"diff_sorted_id": "76", "problem_statement": "Given 7 labeled water jugs with capacities 117, 118, 23, 86, 109, 128, 104, 61 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 367, 390, 400, 470 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 86, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 61, 3], [\"+\", 104, 3], [\"+\", 117, 3], [\"+\", 118, 3], [\"+\", 109, 2], [\"+\", 109, 2], [\"+\", 86, 2], [\"+\", 86, 2], [\"+\", 109, 1], [\"+\", 117, 1], [\"+\", 23, 1], [\"+\", 118, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.038893938064575195", "solution_depth": "16", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[117, 118, 23, 86, 109, 128, 104, 61], [367, 390, 400, 470]]", "is_correct_args": "[[117, 118, 23, 86, 109, 128, 104, 61], [367, 390, 400, 470]]", "A*_args": "[\"[117, 118, 23, 86, 109, 128, 104, 61]\", \"[367, 390, 400, 470]\"]"}
{"diff_sorted_id": "77", "problem_statement": "Given 7 labeled water jugs with capacities 60, 59, 72, 93, 39, 74, 71, 84 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 166, 239, 286, 421 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 71, 4], [\"+\", 71, 4], [\"+\", 93, 4], [\"+\", 93, 4], [\"+\", 93, 4], [\"+\", 71, 3], [\"+\", 84, 3], [\"+\", 60, 3], [\"+\", 71, 3], [\"+\", 71, 2], [\"+\", 84, 2], [\"+\", 84, 2], [\"+\", 39, 1], [\"+\", 93, 1], [\"-\", 59, 1], [\"+\", 93, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.05889129638671875", "solution_depth": "16", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[60, 59, 72, 93, 39, 74, 71, 84], [166, 239, 286, 421]]", "is_correct_args": "[[60, 59, 72, 93, 39, 74, 71, 84], [166, 239, 286, 421]]", "A*_args": "[\"[60, 59, 72, 93, 39, 74, 71, 84]\", \"[166, 239, 286, 421]\"]"}
{"diff_sorted_id": "78", "problem_statement": "Given 7 labeled water jugs with capacities 58, 18, 19, 47, 86, 75, 119, 34 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 234, 331, 343, 379 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 19, 4], [\"+\", 119, 4], [\"+\", 119, 4], [\"+\", 47, 4], [\"+\", 75, 4], [\"+\", 19, 3], [\"+\", 119, 3], [\"+\", 119, 3], [\"+\", 86, 3], [\"+\", 75, 2], [\"+\", 119, 2], [\"+\", 18, 2], [\"+\", 119, 2], [\"+\", 47, 1], [\"+\", 119, 1], [\"-\", 18, 1], [\"+\", 86, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.05347609519958496", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[58, 18, 19, 47, 86, 75, 119, 34], [234, 331, 343, 379]]", "is_correct_args": "[[58, 18, 19, 47, 86, 75, 119, 34], [234, 331, 343, 379]]", "A*_args": "[\"[58, 18, 19, 47, 86, 75, 119, 34]\", \"[234, 331, 343, 379]\"]"}
{"diff_sorted_id": "79", "problem_statement": "Given 7 labeled water jugs with capacities 99, 47, 122, 123, 72, 136, 51, 71 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 274, 292, 361, 438 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 122, 4], [\"+\", 122, 4], [\"+\", 71, 4], [\"+\", 123, 4], [\"+\", 51, 3], [\"+\", 51, 3], [\"+\", 123, 3], [\"+\", 136, 3], [\"+\", 122, 2], [\"+\", 123, 2], [\"+\", 47, 2], [\"+\", 99, 1], [\"+\", 99, 1], [\"-\", 47, 1], [\"+\", 123, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.051012516021728516", "solution_depth": "15", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[99, 47, 122, 123, 72, 136, 51, 71], [274, 292, 361, 438]]", "is_correct_args": "[[99, 47, 122, 123, 72, 136, 51, 71], [274, 292, 361, 438]]", "A*_args": "[\"[99, 47, 122, 123, 72, 136, 51, 71]\", \"[274, 292, 361, 438]\"]"}
{"diff_sorted_id": "80", "problem_statement": "Given 7 labeled water jugs with capacities 110, 146, 117, 118, 148, 104, 79, 103 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 278, 378, 457, 462 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 117, 4], [\"+\", 118, 4], [\"+\", 79, 4], [\"+\", 148, 4], [\"+\", 103, 3], [\"+\", 103, 3], [\"+\", 103, 3], [\"+\", 148, 3], [\"+\", 79, 2], [\"+\", 79, 2], [\"+\", 103, 2], [\"+\", 117, 2], [\"+\", 103, 1], [\"+\", 146, 1], [\"-\", 117, 1], [\"+\", 146, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.0686345100402832", "solution_depth": "16", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[110, 146, 117, 118, 148, 104, 79, 103], [278, 378, 457, 462]]", "is_correct_args": "[[110, 146, 117, 118, 148, 104, 79, 103], [278, 378, 457, 462]]", "A*_args": "[\"[110, 146, 117, 118, 148, 104, 79, 103]\", \"[278, 378, 457, 462]\"]"}
{"diff_sorted_id": "81", "problem_statement": "Given 7 labeled water jugs with capacities 127, 96, 108, 126, 132, 139, 146, 14 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 273, 349, 435, 503 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 96, 4], [\"+\", 108, 4], [\"+\", 139, 4], [\"+\", 146, 4], [\"+\", 14, 4], [\"+\", 139, 3], [\"+\", 146, 3], [\"+\", 126, 3], [\"-\", 108, 3], [\"+\", 132, 3], [\"+\", 96, 2], [\"+\", 126, 2], [\"+\", 127, 2], [\"+\", 127, 1], [\"+\", 146, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.04054760932922363", "solution_depth": "15", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[127, 96, 108, 126, 132, 139, 146, 14], [273, 349, 435, 503]]", "is_correct_args": "[[127, 96, 108, 126, 132, 139, 146, 14], [273, 349, 435, 503]]", "A*_args": "[\"[127, 96, 108, 126, 132, 139, 146, 14]\", \"[273, 349, 435, 503]\"]"}
{"diff_sorted_id": "82", "problem_statement": "Given 7 labeled water jugs with capacities 52, 55, 84, 135, 136, 47, 139, 76 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 292, 325, 496, 516 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 52, 4], [\"+\", 139, 4], [\"+\", 139, 4], [\"+\", 139, 4], [\"+\", 47, 4], [\"+\", 135, 3], [\"+\", 135, 3], [\"+\", 139, 3], [\"-\", 52, 3], [\"+\", 139, 3], [\"+\", 139, 2], [\"+\", 139, 2], [\"+\", 47, 2], [\"+\", 135, 1], [\"+\", 136, 1], [\"-\", 55, 1], [\"+\", 76, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.049492597579956055", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[52, 55, 84, 135, 136, 47, 139, 76], [292, 325, 496, 516]]", "is_correct_args": "[[52, 55, 84, 135, 136, 47, 139, 76], [292, 325, 496, 516]]", "A*_args": "[\"[52, 55, 84, 135, 136, 47, 139, 76]\", \"[292, 325, 496, 516]\"]"}
{"diff_sorted_id": "83", "problem_statement": "Given 7 labeled water jugs with capacities 19, 42, 18, 127, 106, 32, 22, 137 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 245, 252, 264, 314 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 22, 4], [\"+\", 137, 4], [\"+\", 18, 4], [\"+\", 137, 4], [\"+\", 127, 3], [\"+\", 137, 3], [\"+\", 106, 2], [\"+\", 127, 2], [\"+\", 19, 2], [\"+\", 127, 1], [\"-\", 19, 1], [\"+\", 137, 1]]", "opt_solution_cost": "12", "opt_solution_compute_t": "0.036943674087524414", "solution_depth": "12", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[19, 42, 18, 127, 106, 32, 22, 137], [245, 252, 264, 314]]", "is_correct_args": "[[19, 42, 18, 127, 106, 32, 22, 137], [245, 252, 264, 314]]", "A*_args": "[\"[19, 42, 18, 127, 106, 32, 22, 137]\", \"[245, 252, 264, 314]\"]"}
{"diff_sorted_id": "84", "problem_statement": "Given 7 labeled water jugs with capacities 82, 91, 135, 11, 12, 19, 143, 60 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 231, 288, 342, 410 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 82, 4], [\"+\", 91, 4], [\"+\", 91, 4], [\"+\", 135, 4], [\"+\", 11, 4], [\"+\", 60, 3], [\"+\", 135, 3], [\"+\", 12, 3], [\"+\", 135, 3], [\"+\", 60, 2], [\"+\", 82, 2], [\"+\", 11, 2], [\"+\", 135, 2], [\"+\", 91, 1], [\"-\", 11, 1], [\"+\", 60, 1], [\"+\", 91, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.05072736740112305", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[82, 91, 135, 11, 12, 19, 143, 60], [231, 288, 342, 410]]", "is_correct_args": "[[82, 91, 135, 11, 12, 19, 143, 60], [231, 288, 342, 410]]", "A*_args": "[\"[82, 91, 135, 11, 12, 19, 143, 60]\", \"[231, 288, 342, 410]\"]"}
{"diff_sorted_id": "85", "problem_statement": "Given 7 labeled water jugs with capacities 67, 98, 66, 59, 37, 61, 128, 92 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 308, 309, 387, 433 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 59, 4], [\"+\", 128, 4], [\"+\", 128, 4], [\"+\", 59, 4], [\"+\", 59, 4], [\"+\", 98, 3], [\"+\", 128, 3], [\"+\", 128, 3], [\"-\", 59, 3], [\"+\", 92, 3], [\"+\", 59, 2], [\"+\", 92, 2], [\"+\", 92, 2], [\"+\", 66, 2], [\"+\", 59, 1], [\"+\", 92, 1], [\"+\", 98, 1], [\"+\", 59, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.08887290954589844", "solution_depth": "18", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[67, 98, 66, 59, 37, 61, 128, 92], [308, 309, 387, 433]]", "is_correct_args": "[[67, 98, 66, 59, 37, 61, 128, 92], [308, 309, 387, 433]]", "A*_args": "[\"[67, 98, 66, 59, 37, 61, 128, 92]\", \"[308, 309, 387, 433]\"]"}
{"diff_sorted_id": "86", "problem_statement": "Given 7 labeled water jugs with capacities 87, 13, 27, 106, 18, 91, 17, 138 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 205, 365, 391, 414 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 138, 4], [\"+\", 138, 4], [\"+\", 138, 4], [\"+\", 106, 3], [\"+\", 138, 3], [\"+\", 138, 3], [\"-\", 18, 3], [\"+\", 27, 3], [\"+\", 138, 2], [\"+\", 138, 2], [\"-\", 17, 2], [\"+\", 106, 2], [\"+\", 87, 1], [\"+\", 91, 1], [\"+\", 27, 1]]", "opt_solution_cost": "15", "opt_solution_compute_t": "0.04750704765319824", "solution_depth": "15", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[87, 13, 27, 106, 18, 91, 17, 138], [205, 365, 391, 414]]", "is_correct_args": "[[87, 13, 27, 106, 18, 91, 17, 138], [205, 365, 391, 414]]", "A*_args": "[\"[87, 13, 27, 106, 18, 91, 17, 138]\", \"[205, 365, 391, 414]\"]"}
{"diff_sorted_id": "87", "problem_statement": "Given 7 labeled water jugs with capacities 36, 95, 47, 149, 58, 96, 81, 148 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 252, 307, 412, 431 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 58, 4], [\"+\", 96, 4], [\"+\", 149, 4], [\"+\", 81, 4], [\"+\", 47, 4], [\"+\", 148, 3], [\"+\", 148, 3], [\"+\", 58, 3], [\"+\", 58, 3], [\"+\", 148, 2], [\"+\", 148, 2], [\"-\", 36, 2], [\"+\", 47, 2], [\"+\", 81, 1], [\"+\", 148, 1], [\"-\", 58, 1], [\"+\", 81, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.04282355308532715", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[36, 95, 47, 149, 58, 96, 81, 148], [252, 307, 412, 431]]", "is_correct_args": "[[36, 95, 47, 149, 58, 96, 81, 148], [252, 307, 412, 431]]", "A*_args": "[\"[36, 95, 47, 149, 58, 96, 81, 148]\", \"[252, 307, 412, 431]\"]"}
{"diff_sorted_id": "88", "problem_statement": "Given 7 labeled water jugs with capacities 95, 111, 144, 57, 13, 58, 12 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 226, 271, 331, 394 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 95, 4], [\"+\", 144, 4], [\"+\", 57, 4], [\"-\", 13, 4], [\"+\", 111, 4], [\"+\", 58, 3], [\"+\", 144, 3], [\"+\", 13, 3], [\"+\", 58, 3], [\"+\", 58, 3], [\"+\", 57, 2], [\"+\", 58, 2], [\"+\", 144, 2], [\"+\", 12, 2], [\"+\", 57, 1], [\"+\", 58, 1], [\"+\", 111, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.051752328872680664", "solution_depth": "17", "max_successor_states": "56", "num_vars_per_state": "3", "is_feasible_args": "[[95, 111, 144, 57, 13, 58, 12], [226, 271, 331, 394]]", "is_correct_args": "[[95, 111, 144, 57, 13, 58, 12], [226, 271, 331, 394]]", "A*_args": "[\"[95, 111, 144, 57, 13, 58, 12]\", \"[226, 271, 331, 394]\"]"}
{"diff_sorted_id": "89", "problem_statement": "Given 7 labeled water jugs with capacities 30, 26, 116, 76, 98, 48, 46, 45 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 201, 269, 315, 333 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 76, 4], [\"+\", 116, 4], [\"+\", 45, 4], [\"+\", 48, 4], [\"+\", 48, 4], [\"+\", 76, 3], [\"+\", 98, 3], [\"+\", 45, 3], [\"+\", 48, 3], [\"+\", 48, 3], [\"+\", 76, 2], [\"+\", 76, 2], [\"+\", 98, 2], [\"-\", 26, 2], [\"+\", 45, 2], [\"+\", 116, 1], [\"-\", 76, 1], [\"+\", 45, 1], [\"+\", 116, 1]]", "opt_solution_cost": "19", "opt_solution_compute_t": "0.04046440124511719", "solution_depth": "19", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[30, 26, 116, 76, 98, 48, 46, 45], [201, 269, 315, 333]]", "is_correct_args": "[[30, 26, 116, 76, 98, 48, 46, 45], [201, 269, 315, 333]]", "A*_args": "[\"[30, 26, 116, 76, 98, 48, 46, 45]\", \"[201, 269, 315, 333]\"]"}
{"diff_sorted_id": "90", "problem_statement": "Given 7 labeled water jugs with capacities 88, 125, 100, 62, 134, 89, 33, 133 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 306, 407, 457, 518 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "6", "opt_solution": "[[\"+\", 125, 4], [\"+\", 125, 4], [\"+\", 134, 4], [\"+\", 134, 4], [\"+\", 89, 3], [\"+\", 100, 3], [\"+\", 134, 3], [\"+\", 134, 3], [\"+\", 133, 2], [\"+\", 133, 2], [\"+\", 133, 2], [\"-\", 125, 2], [\"+\", 133, 2], [\"+\", 89, 1], [\"+\", 125, 1], [\"-\", 33, 1], [\"+\", 125, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.05500078201293945", "solution_depth": "17", "max_successor_states": "64", "num_vars_per_state": "3", "is_feasible_args": "[[88, 125, 100, 62, 134, 89, 33, 133], [306, 407, 457, 518]]", "is_correct_args": "[[88, 125, 100, 62, 134, 89, 33, 133], [306, 407, 457, 518]]", "A*_args": "[\"[88, 125, 100, 62, 134, 89, 33, 133]\", \"[306, 407, 457, 518]\"]"}
{"diff_sorted_id": "91", "problem_statement": "Given 9 labeled water jugs with capacities 51, 75, 112, 122, 54, 129, 31, 127, 113 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 338, 431, 493, 550 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 75, 4], [\"+\", 112, 4], [\"+\", 112, 4], [\"+\", 122, 4], [\"+\", 129, 4], [\"+\", 112, 3], [\"+\", 127, 3], [\"+\", 127, 3], [\"+\", 127, 3], [\"+\", 51, 2], [\"+\", 122, 2], [\"+\", 129, 2], [\"+\", 129, 2], [\"+\", 112, 1], [\"+\", 113, 1], [\"+\", 113, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.05792498588562012", "solution_depth": "16", "max_successor_states": "72", "num_vars_per_state": "3", "is_feasible_args": "[[51, 75, 112, 122, 54, 129, 31, 127, 113], [338, 431, 493, 550]]", "is_correct_args": "[[51, 75, 112, 122, 54, 129, 31, 127, 113], [338, 431, 493, 550]]", "A*_args": "[\"[51, 75, 112, 122, 54, 129, 31, 127, 113]\", \"[338, 431, 493, 550]\"]"}
{"diff_sorted_id": "92", "problem_statement": "Given 9 labeled water jugs with capacities 143, 34, 117, 130, 50, 142, 144, 150, 29, 78 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 307, 316, 325, 622 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 143, 4], [\"+\", 150, 4], [\"+\", 150, 4], [\"+\", 150, 4], [\"+\", 29, 4], [\"+\", 78, 3], [\"+\", 117, 3], [\"+\", 130, 3], [\"+\", 143, 2], [\"+\", 144, 2], [\"+\", 29, 2], [\"+\", 130, 1], [\"+\", 143, 1], [\"+\", 34, 1]]", "opt_solution_cost": "14", "opt_solution_compute_t": "0.04768729209899902", "solution_depth": "14", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[143, 34, 117, 130, 50, 142, 144, 150, 29, 78], [307, 316, 325, 622]]", "is_correct_args": "[[143, 34, 117, 130, 50, 142, 144, 150, 29, 78], [307, 316, 325, 622]]", "A*_args": "[\"[143, 34, 117, 130, 50, 142, 144, 150, 29, 78]\", \"[307, 316, 325, 622]\"]"}
{"diff_sorted_id": "93", "problem_statement": "Given 9 labeled water jugs with capacities 39, 110, 41, 54, 47, 33, 136, 40, 100 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 192, 459, 473, 493 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 100, 4], [\"+\", 100, 4], [\"+\", 47, 4], [\"+\", 110, 4], [\"+\", 136, 4], [\"+\", 47, 3], [\"+\", 136, 3], [\"+\", 136, 3], [\"+\", 54, 3], [\"+\", 100, 3], [\"+\", 33, 2], [\"+\", 136, 2], [\"+\", 136, 2], [\"+\", 54, 2], [\"+\", 100, 2], [\"+\", 41, 1], [\"+\", 41, 1], [\"+\", 110, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.06568336486816406", "solution_depth": "18", "max_successor_states": "72", "num_vars_per_state": "3", "is_feasible_args": "[[39, 110, 41, 54, 47, 33, 136, 40, 100], [192, 459, 473, 493]]", "is_correct_args": "[[39, 110, 41, 54, 47, 33, 136, 40, 100], [192, 459, 473, 493]]", "A*_args": "[\"[39, 110, 41, 54, 47, 33, 136, 40, 100]\", \"[192, 459, 473, 493]\"]"}
{"diff_sorted_id": "94", "problem_statement": "Given 9 labeled water jugs with capacities 81, 56, 41, 88, 137, 14, 149, 120, 87, 104 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 377, 456, 512, 541 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 81, 4], [\"+\", 149, 4], [\"+\", 149, 4], [\"+\", 81, 4], [\"+\", 81, 4], [\"+\", 81, 3], [\"+\", 120, 3], [\"+\", 149, 3], [\"+\", 81, 3], [\"+\", 81, 3], [\"+\", 41, 2], [\"+\", 137, 2], [\"+\", 149, 2], [\"+\", 88, 2], [\"+\", 41, 2], [\"+\", 120, 1], [\"+\", 120, 1], [\"+\", 137, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.09543561935424805", "solution_depth": "18", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[81, 56, 41, 88, 137, 14, 149, 120, 87, 104], [377, 456, 512, 541]]", "is_correct_args": "[[81, 56, 41, 88, 137, 14, 149, 120, 87, 104], [377, 456, 512, 541]]", "A*_args": "[\"[81, 56, 41, 88, 137, 14, 149, 120, 87, 104]\", \"[377, 456, 512, 541]\"]"}
{"diff_sorted_id": "95", "problem_statement": "Given 9 labeled water jugs with capacities 146, 45, 136, 13, 148, 17, 42, 137, 141, 31 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 307, 384, 555, 575 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 136, 4], [\"+\", 137, 4], [\"+\", 141, 4], [\"+\", 148, 4], [\"+\", 13, 4], [\"+\", 136, 3], [\"+\", 136, 3], [\"+\", 137, 3], [\"+\", 146, 3], [\"+\", 45, 2], [\"+\", 45, 2], [\"+\", 146, 2], [\"+\", 148, 2], [\"+\", 146, 1], [\"+\", 148, 1], [\"+\", 13, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.049184560775756836", "solution_depth": "16", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[146, 45, 136, 13, 148, 17, 42, 137, 141, 31], [307, 384, 555, 575]]", "is_correct_args": "[[146, 45, 136, 13, 148, 17, 42, 137, 141, 31], [307, 384, 555, 575]]", "A*_args": "[\"[146, 45, 136, 13, 148, 17, 42, 137, 141, 31]\", \"[307, 384, 555, 575]\"]"}
{"diff_sorted_id": "96", "problem_statement": "Given 9 labeled water jugs with capacities 90, 21, 104, 111, 97, 22, 34, 15, 62, 52 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 177, 263, 294, 462 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 52, 4], [\"+\", 62, 4], [\"+\", 111, 4], [\"+\", 111, 4], [\"+\", 104, 4], [\"+\", 22, 4], [\"+\", 90, 3], [\"+\", 90, 3], [\"+\", 52, 3], [\"+\", 62, 3], [\"+\", 90, 2], [\"+\", 111, 2], [\"+\", 62, 2], [\"+\", 52, 1], [\"+\", 104, 1], [\"+\", 21, 1]]", "opt_solution_cost": "16", "opt_solution_compute_t": "0.06696057319641113", "solution_depth": "16", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[90, 21, 104, 111, 97, 22, 34, 15, 62, 52], [177, 263, 294, 462]]", "is_correct_args": "[[90, 21, 104, 111, 97, 22, 34, 15, 62, 52], [177, 263, 294, 462]]", "A*_args": "[\"[90, 21, 104, 111, 97, 22, 34, 15, 62, 52]\", \"[177, 263, 294, 462]\"]"}
{"diff_sorted_id": "97", "problem_statement": "Given 9 labeled water jugs with capacities 59, 104, 79, 23, 20, 60, 14, 15, 119, 105 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 215, 403, 420, 504 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 14, 4], [\"+\", 119, 4], [\"+\", 119, 4], [\"+\", 119, 4], [\"+\", 119, 4], [\"+\", 14, 4], [\"+\", 105, 3], [\"+\", 105, 3], [\"+\", 105, 3], [\"+\", 105, 3], [\"+\", 60, 2], [\"+\", 105, 2], [\"+\", 119, 2], [\"+\", 119, 2], [\"+\", 119, 1], [\"-\", 23, 1], [\"+\", 119, 1]]", "opt_solution_cost": "17", "opt_solution_compute_t": "0.03369307518005371", "solution_depth": "17", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[59, 104, 79, 23, 20, 60, 14, 15, 119, 105], [215, 403, 420, 504]]", "is_correct_args": "[[59, 104, 79, 23, 20, 60, 14, 15, 119, 105], [215, 403, 420, 504]]", "A*_args": "[\"[59, 104, 79, 23, 20, 60, 14, 15, 119, 105]\", \"[215, 403, 420, 504]\"]"}
{"diff_sorted_id": "98", "problem_statement": "Given 9 labeled water jugs with capacities 137, 100, 82, 25, 21, 101, 118, 117, 26, 131 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 272, 439, 458, 590 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 82, 4], [\"+\", 117, 4], [\"+\", 117, 4], [\"+\", 137, 4], [\"+\", 137, 4], [\"+\", 26, 3], [\"+\", 137, 3], [\"+\", 137, 3], [\"+\", 137, 3], [\"+\", 21, 3], [\"+\", 100, 2], [\"+\", 101, 2], [\"+\", 101, 2], [\"+\", 137, 2], [\"+\", 117, 1], [\"+\", 137, 1], [\"-\", 82, 1], [\"+\", 100, 1]]", "opt_solution_cost": "18", "opt_solution_compute_t": "0.05659294128417969", "solution_depth": "18", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[137, 100, 82, 25, 21, 101, 118, 117, 26, 131], [272, 439, 458, 590]]", "is_correct_args": "[[137, 100, 82, 25, 21, 101, 118, 117, 26, 131], [272, 439, 458, 590]]", "A*_args": "[\"[137, 100, 82, 25, 21, 101, 118, 117, 26, 131]\", \"[272, 439, 458, 590]\"]"}
{"diff_sorted_id": "99", "problem_statement": "Given 9 labeled water jugs with capacities 32, 73, 55, 68, 61, 107, 44, 45, 74, 113 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 203, 429, 433, 477 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 74, 4], [\"+\", 74, 4], [\"+\", 74, 4], [\"+\", 113, 4], [\"+\", 68, 4], [\"+\", 74, 4], [\"+\", 68, 3], [\"+\", 107, 3], [\"+\", 113, 3], [\"+\", 113, 3], [\"+\", 32, 3], [\"+\", 61, 2], [\"+\", 113, 2], [\"+\", 113, 2], [\"+\", 74, 2], [\"+\", 68, 2], [\"+\", 61, 1], [\"+\", 74, 1], [\"+\", 68, 1]]", "opt_solution_cost": "19", "opt_solution_compute_t": "0.048816680908203125", "solution_depth": "19", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[32, 73, 55, 68, 61, 107, 44, 45, 74, 113], [203, 429, 433, 477]]", "is_correct_args": "[[32, 73, 55, 68, 61, 107, 44, 45, 74, 113], [203, 429, 433, 477]]", "A*_args": "[\"[32, 73, 55, 68, 61, 107, 44, 45, 74, 113]\", \"[203, 429, 433, 477]\"]"}
{"diff_sorted_id": "100", "problem_statement": "Given 9 labeled water jugs with capacities 126, 120, 127, 110, 54, 39, 38, 47, 139, 99 liters, we aim to fill 4 unlabeled buckets, numbered 1 to 4 and arranged in a line in ascending order, with 219, 240, 312, 411 liters of water respectively. The amount of water in each unlabeled bucket can not at any point in time exceed the amount of water in the bucket placed after it. Jugs can only be filled to the top and emptied completely, and the unlabeled buckets cannot be overfilled. An action, represented as a tuple ('+', X, Y) or ('-', X, Y), involves adding to or removing water from the unlabeled bucket numbered Y, using the jug with capacity X. Determine the shortest sequence of actions needed to fill the buckets as specified, and present the solution as a list of action tuples in Python syntax.", "problem_type": "water_jug", "problem_category": "subset_sum", "relative_diff_score": "7", "opt_solution": "[[\"+\", 99, 4], [\"+\", 139, 4], [\"+\", 47, 4], [\"+\", 126, 4], [\"+\", 47, 3], [\"+\", 126, 3], [\"+\", 139, 3], [\"+\", 120, 2], [\"+\", 120, 2], [\"+\", 99, 1], [\"+\", 120, 1]]", "opt_solution_cost": "11", "opt_solution_compute_t": "0.045166015625", "solution_depth": "11", "max_successor_states": "80", "num_vars_per_state": "3", "is_feasible_args": "[[126, 120, 127, 110, 54, 39, 38, 47, 139, 99], [219, 240, 312, 411]]", "is_correct_args": "[[126, 120, 127, 110, 54, 39, 38, 47, 139, 99], [219, 240, 312, 411]]", "A*_args": "[\"[126, 120, 127, 110, 54, 39, 38, 47, 139, 99]\", \"[219, 240, 312, 411]\"]"}
